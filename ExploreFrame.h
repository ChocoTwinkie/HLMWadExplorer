/*
 ** HLMWadExplorer
 **
 ** Copyright (C) 2015 Tobias Taschner <github@tc84.de>
 **
 ** Licensed under GPL v3 or later
 */
#ifndef __ExploreFrame__
#define __ExploreFrame__

/**
@file
Subclass of BaseExploreFrame, which is generated by wxFormBuilder.
*/

#include "HLMWADFrames.h"

//// end generated include

#include "WADArchive.h"
#include <wx/sharedptr.h>
#include <wx/filehistory.h>
#include <set>

/** Implementing BaseExploreFrame */
class ExploreFrame : public BaseExploreFrame
{
	protected:
		// Handlers for BaseExploreFrame events.
		void OnWindowClose( wxCloseEvent& event );
		void OnOpenClicked( wxCommandEvent& event );
		void OnSaveClicked( wxCommandEvent& event );
		void OnSaveAsClicked( wxCommandEvent& event );
		void OnRestoreClicked( wxCommandEvent& event );
		void OnExtractClicked( wxCommandEvent& event );
		void OnReplaceClicked( wxCommandEvent& event );
		void OnAddClicked( wxCommandEvent& event );
		void OnDeleteClicked( wxCommandEvent& event );
		void OnQuitClicked( wxCommandEvent& event );
		void OnAboutClicked( wxCommandEvent& event );
		void OnSearchCtrlButton(wxCommandEvent& event);
		void OnSearchCtrlText(wxCommandEvent& event);
		void OnSearchCtrlEnter(wxCommandEvent& event);
		void OnSearchTimer(wxTimerEvent& event);
		void OnFileListSelectionChanged(wxDataViewEvent& event);
		void OnFileListDoubleClick( wxMouseEvent& event );
		void OnRecentFileClicked( wxCommandEvent& event );
		void OnPatchApplyClicked(wxCommandEvent& event);
		void OnPatchPrepareClicked(wxCommandEvent& event);
		void OnPatchCreateClicked(wxCommandEvent& event);
	public:
		/** Constructor */
		ExploreFrame( wxWindow* parent );
	//// end generated class members
		~ExploreFrame();

	private:
		friend class FileDataModel;

		wxSharedPtr<WADArchive> m_archive;
		bool m_backupAvailable;
		wxFileHistory m_fileHistory;
		bool m_preparingPatch;
		bool m_ignoreSearch;
		std::set<size_t> m_patchEntries;
		wxDataViewColumn* m_fileListToggleColumn;
	
		const WADArchiveEntry& GetSelectedEntry() const;

		void OpenFile(const wxString& filename);

		void UpdateTitle();
	
		bool ConfirmBackup();
	
		void CheckBackup();

		wxString GetGameBasePath() const;

		void SelectItem(size_t index);

		void ApplyFilter(const wxString& filter);
};

#endif // __ExploreFrame__
